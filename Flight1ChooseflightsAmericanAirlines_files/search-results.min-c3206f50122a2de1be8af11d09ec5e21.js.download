'use strict';/**
 *  UI-REFACTORED
 *    FROM --> ./legacy-web/src/main/js/js/aa/shopping/searchResults.js
 *    TO   --> ./legacy-web/src/main/assets/js/shopping/search-results.js
 **/AAcom.modules.searchResultsMainSetup=function(AAUI){AAUI.util=new aa_Utilities;var _loadingTxt=AAUI.getProperty('loadingTxt'),_processingTxt=AAUI.getProperty('processingTxt');AAUI.resultsRelevanceList=$j('#searchResultsContainer ul li.js-moreflights').get();AAUI.isMobileApp=false;AAUI.initClickEvents=function(){/********* SHOW MORE ****************/AAUI.onClick('.showmorelink',function(event){event.preventDefault();var parentnode=$j('#searchResultsContainer'),listitems=$j('#searchResultsContainer ul li.js-moreflights');var totalcount=listitems.length,currentcount=listitems.not('.is-hidden').length,nextindex,batchsize=10,remainingcount=totalcount-currentcount,nextontop=currentcount;if(remainingcount>batchsize){nextindex=currentcount+batchsize;listitems.slice(0,nextindex).removeClass('is-hidden').show();listitems.slice(nextindex).hide();currentcount=currentcount+batchsize}else{listitems.removeClass('is-hidden').show();parentnode.find('.showmore').hide();currentcount=totalcount}remainingcount=totalcount-currentcount;parentnode.find('.showingcount').html(AAUI.getProperty('showing')+currentcount+AAUI.getProperty('of')+totalcount);$j('html, body').animate({scrollTop:listitems.eq(nextontop).offset().top-5},100);listitems.eq(nextontop).find('.js-showmorefocus').attr('tabindex',-1).focus()});AAUI.destroyDialogs=function(dialogs){for(var i in dialogs){$j(dialogs[i]).dialog('destroy')}};var closeBEDialog=function closeBEDialog(){if($j('#basicEconomyWarningDialog').dialog('isOpen')){AAUI.util.aaDialog('basicEconomyWarning').closeDialog()}};/*************** ONEWAY, ROUNDTRIP, MULTICITY AND TRIPSUMMARY ********************/'';AAUI.onClick('.fareselector,.mobilefareselector,.js-be-action-btn',function(){if(!$device.mobile){Stickyfill.kill()}var selectedFareDataAttr={sliceId:$j(this).data('sliceid'),fareId:$j(this).data('fareid'),bookingPathId:$j(this).data('bookingpathid'),fareFilter:$j(this).data('farefilter'),maxSlices:$j(this).data('maxslices'),currentSliceIndex:$j(this).data('currentsliceindex')},$mainCabinContainer=$j(this).parent().siblings().find('.fareType_MainCabin'),mainCabinFareId=$mainCabinContainer.data('fareid');AAUI.buildWATags(this);if($j(this).hasClass('fareType_BasicEconomy')&&selectedFareDataAttr.currentSliceIndex==1){AAUI.util.aaDialog('basicEconomyWarning').openDialog();AAUI.buildBEWarning(this);AAUI.pushIntoHistory('basicEconomyWarning');$j('#beAcceptRestrictions, #moveToMainCabin').data('sliceid',selectedFareDataAttr.sliceId).data('bookingpathid',selectedFareDataAttr.bookingPathId).data('farefilter',selectedFareDataAttr.fareFilter).data('maxslices',selectedFareDataAttr.maxSlices).data('currentsliceindex',selectedFareDataAttr.currentSliceIndex).data('flightindex',$j(this).closest('.js-moreflights').data('flightindex'));$j('#beAcceptRestrictions').data('fareid',selectedFareDataAttr.fareId);$j('#moveToMainCabin').data('fareid',mainCabinFareId)}else{/***added mobile app condition to fix one way continuous spinning for BE***/if(!$device.mobileApp){closeBEDialog()}$j('.mobile-fare-options-container, .interim-overlay').hide();AAUI.pushIntoHistory('nextSlice');$j('body').aaBusy({message:_loadingTxt}).start();/***added destroy dialogs to open dialogs on availability failure mobile app***/AAUI.destroyDialogs(['#mobileSortDialog','#flightDetailsDialog','#systemWideUpgradesDialog']);if(selectedFareDataAttr.currentSliceIndex<selectedFareDataAttr.maxSlices){var itinavailable=false;AAUI.ajaxRequest({url:'/booking/flights/choose-flights/ajax/availabilitycheck?selectedFareId='+encodeURIComponent(selectedFareDataAttr.fareId)+'&bookingPathStateId='+encodeURIComponent(selectedFareDataAttr.bookingPathId)+'&selectedSliceId='+encodeURIComponent(selectedFareDataAttr.sliceId)+'&selectedSliceIndex='+encodeURIComponent(selectedFareDataAttr.currentSliceIndex),busyContainer:$j('body'),busyMessage:_loadingTxt,showSpinner:true,onSuccess:function onSuccess(htmlResponse,textStatus){if($device.mobileApp){AAUI.isMobileApp=true;closeBEDialog()}AAUI.destroyDialogs(['#basicEconomyWarningDialog']);if(htmlResponse=='success'){itinavailable=true;var furl='/booking/flights/choose-flights/flight'+selectedFareDataAttr.currentSliceIndex+'?selectedFareId='+encodeURIComponent(selectedFareDataAttr.fareId)+'&bookingPathStateId='+encodeURIComponent(selectedFareDataAttr.bookingPathId)+'&selectedSliceId='+encodeURIComponent(selectedFareDataAttr.sliceId)+'&selectedSliceIndex='+encodeURIComponent(selectedFareDataAttr.currentSliceIndex);var form=$j(document.createElement('form')).attr('action',furl).attr('method','post');$j('body').append(form);$j(form).submit()}else{$j('#aa-content-frame').html(htmlResponse);AAUI.resultsRelevanceList=$j('#searchResultsContainer ul li.js-moreflights').get();$j('#globalMessages').show();AAUI.tier1.setFocus($j('#globalMessageRenderer *[class^="message"]'));if(!$device.mobile){AAUI.multicitySortToggle()}if(typeof utag!='undefined'){utag.link($j.parseJSON(JSON.stringify(eval('('+$j('#utagAvailabilityError').val()+')'))))}}},onError:function onError(){displayGenericSystemErrorMessage();$j('.mobile-fare-options-container, .interim-overlay').hide();if($device.mobileApp){AAUI.isMobileApp=true;closeBEDialog()}},onComplete:function onComplete(){/***to close dialogs on availability failure***/if(!itinavailable){$j('body').aaBusy().stop()}if(!$device.mobile){AAUI.initCarousels();AAUI.noFareResultsCheck()}else{AAUI.noFareResultsCheckMobile()}AAUI.isMobileApp=false;AAUI.initPage(false)}})}else{var turl='/booking/flights/choose-flights/your-trip-summary?selectedFareId='+encodeURIComponent(selectedFareDataAttr.fareId)+'&bookingPathStateId='+encodeURIComponent(selectedFareDataAttr.bookingPathId)+'&selectedSliceId='+encodeURIComponent(selectedFareDataAttr.sliceId);window.location.href=turl}}return true});/**************** CHANGE ***************************/AAUI.onClick('.mobileChangeFlight,.changeFlight',function(event){event.preventDefault();var $self=$j(this),bookingPathId=$self.data('bookingpathstateid'),fareFilter=$self.data('farefilter'),currentSliceIndex=$self.data('currentsliceindex'),autoUpSell=$self.data('autoupsell');if(urlParam('upsell',window.location.href)==='true'||autoUpSell===true){window.location.href='/booking/flights/choose-flights/flight1?bookingPathStateId='+encodeURIComponent(bookingPathId)}else{window.location.href='/booking/flights/choose-flights/flight'+currentSliceIndex+'?bookingPathStateId='+encodeURIComponent(bookingPathId)+'&selectedSliceIndex='+encodeURIComponent(currentSliceIndex-1)}});/******************** UPSELL ********************/AAUI.onClick('.upsellitinerary',function(event){event.preventDefault();var $self=$j(this),bookingPathId=$self.data('bookingpathid'),itineraryIndex=$self.data('upsellitineraryindex'),fareId=$self.data('fareid'),sliceId=$self.data('sliceid'),fareFilter=$self.data('farefilter');AAUI.buildUpsellTag(this);window.location.href='/booking/flights/choose-flights/your-trip-summary?upsell=true&bookingPathStateId='+encodeURIComponent(bookingPathId)+'&upsellItineraryIndex='+encodeURIComponent(itineraryIndex)+'&fareFilter='+encodeURIComponent(fareFilter);return true});/************* SYSTEM WIDE UPGRADE DIALOG ***********/AAUI.onClick('.swu-upgrade-dialog',function(event){event.preventDefault();if($device.mobile){event.stopPropagation()}var $self=$j(this),selectedSliceId=$self.data('selectedsliceid'),bookingPathStateId=$self.data('bookingpathstateid'),currentSliceIndex=$self.data('currentsliceindex'),sliceIndex=currentSliceIndex-1,mode=$j('#searchResultsContainer').find('.selectedfilter').data('farefilter');AAUI.util.aaDialog('systemWideUpgrades').openDialog();AAUI.pushIntoHistory('systemWideUpgrades');AAUI.ajaxRequest({url:'/booking/flights/choose-flights/ajax/systemwideupgrades/details?sliceId='+encodeURIComponent(selectedSliceId)+'&bookingPathStateId='+encodeURIComponent(bookingPathStateId)+'&mode='+mode+'&sliceIndex='+sliceIndex,busyContainer:$j('#systemWideUpgradesDialog').parent(),busyMessage:_loadingTxt,onSuccess:function onSuccess(htmlResponse,textStatus){if(textStatus=='success'&&!!htmlResponse){clearGenericSystemErrorMessages();$j('#js-systemWideUpgrades').html(htmlResponse);AAUI.util.aaDialog('systemWideUpgrades').resizeDialog()}else{displayGenericSystemErrorMessage('#js-systemWideUpgrades')}},onError:function onError(){displayGenericSystemErrorMessage('#js-systemWideUpgrades')}});return true});/************FLIGHT DETAILS********************************/AAUI.onClick('.flight-details-dialog',function(event){event.preventDefault();if($device.mobile){event.stopPropagation()}var $self=$j(this),selectedSliceId=$self.data('selectedsliceid'),bookingPathStateId=$self.data('bookingpathstateid'),currentSliceIndex=$self.data('currentsliceindex'),sliceIndex='0',tripType=$self.data('triptype'),selectedFareId=$self.data('fareid'),itineraryIndex=$self.data('itineraryindex'),sliceIndex=currentSliceIndex-1,mode=$j('#searchResultsContainer').find('.selectedfilter').data('farefilter');AAUI.util.aaDialog('flightDetails').openDialog();AAUI.pushIntoHistory('flightDetails');if(typeof selectedFareId=='undefined'){selectedFareId=''}if(typeof itineraryIndex=='undefined'){itineraryIndex=''}AAUI.ajaxRequest({url:'/booking/flights/choose-flights/ajax/flightDetails?selectedSliceId='+encodeURIComponent(selectedSliceId)+'&bookingPathStateId='+encodeURIComponent(bookingPathStateId)+'&fareFilter='+mode+'&selectedSliceIndex='+sliceIndex+'&selectedFareId='+encodeURIComponent(selectedFareId)+'&upsellItineraryIndex='+encodeURIComponent(itineraryIndex),busyContainer:$j('#flightDetailsDialog, #mobileFlightDetailsDialog').parent(),busyMessage:_loadingTxt,onSuccess:function onSuccess(htmlResponse,textStatus){if(textStatus=='success'&&!!htmlResponse){clearGenericSystemErrorMessages();$j('#js-flightDetails').html(htmlResponse);AAUI.util.aaDialog('flightDetails').resizeDialog();if(!$device.mobile){AAUI.initTabs()}}else{displayGenericSystemErrorMessage('#js-flightDetails')}},onError:function onError(){displayGenericSystemErrorMessage('#js-flightDetails')}});return true});/******************* SEATS DIALOG *************************/AAUI.onClick('.seats-detail-dialog',function(event){event.preventDefault();AAUI.pushIntoHistory('viewAvailableSeats');var seatsLink=$j(this).data('seatslink');AAUI.openVASDialog(seatsLink)})};/******************SUBMIT TRIPSUMMARY TO PASSENGER DETAILS************/AAUI.onSubmit('#tripSummaryForm',function(){if(!/upsell=true/i.test(window.location.href)){AAUI.buildUpsellTag()}$j('body').aaBusy({message:_processingTxt}).start()});AAUI.noFareResultsCheck=function(){if($j.trim($j('#flightResultsContainer').find('.search-results-normal').html()).length===0){$j('[id*="flightResultsContainer"]').html('<div id="faresUnavailable" class="fares-unavailable"><span>'+AAUI.getProperty('faresUnavailable.text')+'</span></div>');$j('#faresUnavailable span').attr('tabindex',-1).focus()}};/****************** POP STATE *************************/AAUI.historyArray=[];$j(window).on('popstate',function(e){if(e.originalEvent.state!==null&&e.originalEvent.state.page==='nextSlice'){var historyLenArr=JSON.parse(sessionStorage.getItem('CFBackButtonHistoryArr')),sliceindex=$j('#searchResultsContainer').data('currentsliceindex')-1;history.go('-'+historyLenArr[sliceindex]);return}var historyArrayElement=AAUI.historyArray.pop();if(typeof historyArrayElement==='undefined'){return}if(historyArrayElement.nextview==='nextSlice'){AAUI.historyArray=[];return}AAUI.poppedOutOfHistoryArrayOnce=true;if(historyArrayElement.nextview==='interim'){$j('.mobile-fare-options-container, .interim-overlay').hide()}else{AAUI.util.aaDialog(historyArrayElement.nextview).closeDialog()}});/****************** PUSH STATE FUNCTION ***********************/AAUI.pushIntoHistory=function(nextview){try{if(nextview!=='nextSlice'){history.pushState(null,null,null);AAUI.historyArray.push({nextview:nextview})}else{var sliceindex=parseInt($j('#searchResultsContainer').data('currentsliceindex'))-1,historyLenArr=[];history.pushState({page:'nextSlice'},null,null);AAUI.historyArray.push({nextview:nextview});if(sessionStorage.getItem('CFBackButtonHistoryArr')!==null){historyLenArr=JSON.parse(sessionStorage.getItem('CFBackButtonHistoryArr'))}historyLenArr[sliceindex]=AAUI.historyArray.length;sessionStorage.setItem('CFBackButtonHistoryArr',JSON.stringify(historyLenArr));history.go('-'+AAUI.historyArray.length)}AAUI.poppedOutOfHistoryArrayOnce=false}catch(err){return}};AAUI.clearGlobalMessages=function(){$j('#globalMessageRenderer *[class^="message"]').not('.sticky-message').remove()};AAUI.scrollTop=function(){$j('html,body').animate({scrollTop:0})};AAUI.filterSelectedStateAndHiddenText=function(resultcontainer,filterselected){var $resultsContainer=$j(resultcontainer),$resultsContainerRefundableFare=$resultsContainer.find('.refundable-fare'),$resultsContainerLowestFare=$resultsContainer.find('.lowest-fare');if(filterselected==='lowest-fare'){$resultsContainerRefundableFare.removeClass('selectedfilter').find('.show-text').html(AAUI.getProperty('show'));$resultsContainerLowestFare.addClass('selectedfilter').find('.show-text').html(AAUI.getProperty('currentlyShowing'))}else{$resultsContainerLowestFare.removeClass('selectedfilter').find('.show-text').html(AAUI.getProperty('show'));$resultsContainerRefundableFare.addClass('selectedfilter').find('.show-text').html(AAUI.getProperty('currentlyShowing'))}};var displayGenericSystemErrorMessage=function displayGenericSystemErrorMessage(fragment){$j('.system-error-message').show();if(!!fragment){$j(fragment).empty();AAUI.setFocusOn($j(fragment).parent().find('.system-error-message'))}else{AAUI.tier1.setFocus('.system-error-message')}};var clearGenericSystemErrorMessages=function clearGenericSystemErrorMessages(){$j('.system-error-message').hide()};AAUI.noFareResultsCheckMobile=function(){var searchResults=$j('.search-results');if($j.trim(searchResults.find('li').html()).length===0){searchResults.html('<div id="faresUnavailable" class="fares-unavailable"><span>'+AAUI.getProperty('faresUnavailable.text')+'</span></div>');$j('.flightsBiasedMessage, .sortbutton').hide()}};var urlParam=function urlParam(name,url){var results=new RegExp('[?&]'+name+'=([^&#]*)').exec(url);if(results===null){return false}return results[1]||0}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=search-results.min.js.map
