'use strict';//Initialize sandbox
AAcom.modules.viewAvailableSeatsDialog=function(AAUI){var _loadingTxt=AAUI.getProperty('loadingTxt');var _aaUtil=new aa_Utilities;AAUI.initVAS=function(){// Insert dialog container dynamically since it can be used on different pages on AA.com.
$j('<div id="viewAvailableSeatsDialog" class="is-hidden"><div id="js-viewAvailableSeats"></div></div>').appendTo('body');var buttons=[{name:AAUI.getProperty('global.button.close'),cssClass:'btn'}];if($device.mobile||$device.mobileApp){_aaUtil.aaDialog('viewAvailableSeats',{buttons:buttons,cssClass:'full-screen-dialog',minHeight:$j(window).height(),title:AAUI.getProperty('view.only.seats.title.text'),onOpen:function onOpen(){$j('#main').hide()},onClose:function onClose(){$j('#main').show();if(AAUI.poppedOutOfHistoryArrayOnce===false){history.back()}}})}else{_aaUtil.aaDialog('viewAvailableSeats',{buttons:buttons,width:'large',closeDialog:true,toggleScroll:true,title:AAUI.getProperty('view.only.seats.title.text'),onClose:function onClose(){if(AAUI.poppedOutOfHistoryArrayOnce===false){history.back()}}})}};var showSliderArrows=function showSliderArrows(){var numberOfFlightTabs=$j('#seatFlightTabs').find('li').length;var minumiumTabNumber=$device.mobile?2:4;return numberOfFlightTabs>minumiumTabNumber};AAUI.openVASDialog=function(seatsLink){_aaUtil.aaDialog('viewAvailableSeats').openDialog();AAUI.ajaxRequest({url:seatsLink,busyContainer:$j('#viewAvailableSeatsDialog').parent(),busyMessage:_loadingTxt,onSuccess:function onSuccess(htmlResponse,textStatus){if(textStatus=='success'){$j('#js-viewAvailableSeats').empty();$j('#js-viewAvailableSeats').html(htmlResponse);AAUI.initSwiper('#seatFlightCarousel',{type:'tabs',slidesPerView:$device.mobile?2:4,addArrows:showSliderArrows(),spaceBetween:15,selectedItem:0,selectedItemText:AAUI.getProperty('slider.currentlySelectedFlightText'),selectedItemJSClass:'js-currently-selected-text',onSelect:function onSelect(itemSelected,swiper){var id=$j(itemSelected).attr('id'),dataIndex=$j(itemSelected).attr('data-index'),dataCount=parseInt(dataIndex,10)+1;if(id=='chooseFlightLink_'+dataCount){var queryParams=$j('#queryParams'+dataIndex).attr('value');var carrier=$j('#carrier'+dataIndex).attr('value');var carrierName=$j('#carrierName'+dataIndex).attr('value');if(carrier=='AA'||carrier=='AE'){AAUI.ajaxRequest({url:'/seats/legView'+queryParams,type:'GET',dataType:'html',busyContainer:$j('#jsSeatBusyContainer'),busyMessage:_loadingTxt,onSuccess:function onSuccess(response){if(response){$j('#jsSeatMapView').html(response);_aaUtil.aaDialog('viewAvailableSeats').resizeDialog()}$j('#jsCloseSection').removeClass('errorFooter');$j('#viewAvailableSeatsDialog').scrollTop(0)},onError:function onError(){$j('#jsSeatMapView').html(AAUI.getProperty('seatMapUnavailableMessage'));$j('#jsCloseSection').addClass('errorFooter')}})}else{$j('#jsSeatMapView').html(AAUI.getProperty('otherCarrierSeatMapMessage').replace('{0}',carrierName));$j('#jsCloseSection').addClass('errorFooter')}}}});_aaUtil.aaDialog('viewAvailableSeats').resizeDialog()}},onError:function onError(){$j('#js-viewAvailableSeats').html(AAUI.getProperty('seatMapUnavailableMessage'));$j('#jsCloseSection').addClass('errorFooter')}})};$j(document).ready(function(){AAUI.initVAS();AAUI.onClick('.js-submitNavigation',function(){var id=$j(this).find('a').attr('id'),dataIndex=$j(this).find('a').attr('data-index'),dataCount=parseInt(dataIndex,10)+1;if(id=='chooseFlightLink_'+dataCount){var queryParams=$j('#queryParams'+dataIndex).attr('value');var carrier=$j('#carrier'+dataIndex).attr('value');var carrierName=$j('#carrierName'+dataIndex).attr('value');if(carrier=='AA'||carrier=='AE'){AAUI.ajaxRequest({url:'/seats/legView'+queryParams,type:'GET',dataType:'html',busyContainer:$j('#jsSeatBusyContainer'),busyMessage:_loadingTxt,onSuccess:function onSuccess(response){if(response){$j('#jsSeatMapView').html(response)}$j('#jsCloseSection').removeClass('errorFooter');$j('#viewAvailableSeatsDialog').scrollTop(0)},onError:function onError(){$j('#jsSeatMapView').html(AAUI.getProperty('seatMapUnavailableMessage'));$j('#jsCloseSection').addClass('errorFooter')}})}else{$j('#jsSeatMapView').html(AAUI.getProperty('otherCarrierSeatMapMessage'));$j('#jsSeatMapView').html(AAUI.getProperty('otherCarrierSeatMapMessage').replace('{0}',carrierName));$j('#jsCloseSection').addClass('errorFooter')}}})})};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=view-available-seats-dialog.min.js.map
