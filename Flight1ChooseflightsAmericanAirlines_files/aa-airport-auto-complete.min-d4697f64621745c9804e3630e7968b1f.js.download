"use strict";/**
*  UI-REFACTORED
*    FROM --> ./legacy-web/src/main/js/apps/common/js/jquery/aacom/plugins/aaAirportAutoComplete.js
*    TO   --> ./webapps/shared-web/src/main/assets/js/legacy/plugins/aa-airport-auto-complete.js
**///Requires jQuery UI
;(function($j){function aaAirportAutoComplete(targetFields,onlyAirportsIfNotNull,options){var defaults={minLength:3,source:function source(request,response){$j.ajax({type:"GET",url:"/home/ajax/airportLookup",contentType:"application/json",dataType:"json",data:{searchText:request.term,onlyAirportsIfNotNull:onlyAirportsIfNotNull},success:function success(data){response($j.map(data,function(item){return{label:item.code+" - "+item.name+", "+(item.countryCode=="US"?item.stateCode:item.countryName),value:item.code}}))}})},messages:{noResults:function noResults(){return AAcom.prototype.getProperty("autoComplete.noResult")},results:function results(count){var resultMessage="";if(count===1){resultMessage=AAcom.prototype.getProperty("autoComplete.oneResult")}else{resultMessage=AAcom.prototype.getProperty("autoComplete.manyResult");resultMessage=resultMessage.replace("{0}",count)}return resultMessage}},select:function select(){/* Android touch issue workaround to force selected value to display and fixes Rebrand defect #311 */$j(this).blur().focus()},focus:function focus(event,ui){$j("#ariaLiveReaderContainer").text(ui.item.label)}};var settings=$j.extend(defaults,options);$j(targetFields).autocomplete(settings).attr({autocomplete:"off",autocorrect:"off"})}//----------------------------------------------------------------------------------------------------------------------------------
//Register with jQuery as a plugin
//----------------------------------------------------------------------------------------------------------------------------------
$j.fn.aaAirportAutoComplete=function(onlyAirportsIfNotNull,options){return this.each(function(){new aaAirportAutoComplete(this,onlyAirportsIfNotNull,options)})}})(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxlZ2FjeS9wbHVnaW5zL2FhLWFpcnBvcnQtYXV0by1jb21wbGV0ZS5qcyJdLCJuYW1lcyI6WyIkaiIsImFhQWlycG9ydEF1dG9Db21wbGV0ZSIsInRhcmdldEZpZWxkcyIsIm9ubHlBaXJwb3J0c0lmTm90TnVsbCIsIm9wdGlvbnMiLCJkZWZhdWx0cyIsIm1pbkxlbmd0aCIsInNvdXJjZSIsInJlcXVlc3QiLCJyZXNwb25zZSIsImFqYXgiLCJ0eXBlIiwidXJsIiwiY29udGVudFR5cGUiLCJkYXRhVHlwZSIsImRhdGEiLCJzZWFyY2hUZXh0IiwidGVybSIsInN1Y2Nlc3MiLCJtYXAiLCJpdGVtIiwibGFiZWwiLCJjb2RlIiwibmFtZSIsImNvdW50cnlDb2RlIiwic3RhdGVDb2RlIiwiY291bnRyeU5hbWUiLCJ2YWx1ZSIsIm1lc3NhZ2VzIiwibm9SZXN1bHRzIiwiQUFjb20iLCJwcm90b3R5cGUiLCJnZXRQcm9wZXJ0eSIsInJlc3VsdHMiLCJjb3VudCIsInJlc3VsdE1lc3NhZ2UiLCJyZXBsYWNlIiwic2VsZWN0IiwiYmx1ciIsImZvY3VzIiwiZXZlbnQiLCJ1aSIsInRleHQiLCJzZXR0aW5ncyIsImV4dGVuZCIsImF1dG9jb21wbGV0ZSIsImF0dHIiLCJhdXRvY29ycmVjdCIsImZuIiwiZWFjaCIsImpRdWVyeSJdLCJtYXBwaW5ncyI6ImFBQUE7Ozs7R0FNQTtBQUNBLENBQUUsVUFBU0EsRUFBVCxDQUFZLENBQ1YsUUFBU0Msc0JBQVQsQ0FBK0JDLFlBQS9CLENBQTZDQyxxQkFBN0MsQ0FBb0VDLE9BQXBFLENBQTZFLENBQ3pFLEdBQUlDLFVBQVcsQ0FDUEMsVUFBVyxDQURKLENBRVBDLE9BQVEsZ0JBQVNDLE9BQVQsQ0FBa0JDLFFBQWxCLENBQTRCLENBQ2hDVCxHQUFHVSxJQUFILENBQVEsQ0FDSkMsS0FBTSxLQURGLENBRUpDLElBQUssMEJBRkQsQ0FHSkMsWUFBYSxrQkFIVCxDQUlKQyxTQUFVLE1BSk4sQ0FLSkMsS0FBTSxDQUNGQyxXQUFZUixRQUFRUyxJQURsQixDQUVGZCxzQkFBdUJBLHFCQUZyQixDQUxGLENBU0plLFFBQVMsaUJBQVNILElBQVQsQ0FBZSxDQUNwQk4sU0FBU1QsR0FBR21CLEdBQUgsQ0FBT0osSUFBUCxDQUFhLFNBQVNLLElBQVQsQ0FBZSxDQUNqQyxNQUFPLENBQ0hDLE1BQU9ELEtBQUtFLElBQUwsQ0FBWSxLQUFaLENBQW9CRixLQUFLRyxJQUF6QixDQUFnQyxJQUFoQyxFQUF3Q0gsS0FBS0ksV0FBTCxFQUFvQixJQUFwQixDQUEyQkosS0FBS0ssU0FBaEMsQ0FBNENMLEtBQUtNLFdBQXpGLENBREosQ0FFSEMsTUFBT1AsS0FBS0UsSUFGVCxDQUlWLENBTFEsQ0FBVCxDQU1ILENBaEJHLENBQVIsQ0FrQkgsQ0FyQk0sQ0FzQlBNLFNBQVUsQ0FDTkMsVUFBVyxvQkFBVyxDQUNsQixNQUFPQyxPQUFNQyxTQUFOLENBQWdCQyxXQUFoQixDQUE0Qix1QkFBNUIsQ0FDVixDQUhLLENBSU5DLFFBQVMsaUJBQVNDLEtBQVQsQ0FBZ0IsQ0FDckIsR0FBSUMsZUFBZ0IsRUFBcEIsQ0FDQSxHQUFHRCxRQUFVLENBQWIsQ0FBZSxDQUNYQyxjQUFnQkwsTUFBTUMsU0FBTixDQUFnQkMsV0FBaEIsQ0FBNEIsd0JBQTVCLENBQ25CLENBRkQsSUFFSyxDQUNERyxjQUFnQkwsTUFBTUMsU0FBTixDQUFnQkMsV0FBaEIsQ0FBNEIseUJBQTVCLENBQWhCLENBQ0FHLGNBQWdCQSxjQUFjQyxPQUFkLENBQXNCLEtBQXRCLENBQTZCRixLQUE3QixDQUNuQixDQUNELE1BQU9DLGNBQ1YsQ0FiSyxDQXRCSCxDQXFDUEUsT0FBUSxpQkFBVyxDQUNmLHFHQUNBckMsR0FBRyxJQUFILEVBQVNzQyxJQUFULEdBQWdCQyxLQUFoQixFQUNILENBeENNLENBeUNQQSxNQUFPLGVBQVNDLEtBQVQsQ0FBZ0JDLEVBQWhCLENBQW9CLENBQ3ZCekMsR0FBRywwQkFBSCxFQUErQjBDLElBQS9CLENBQW9DRCxHQUFHckIsSUFBSCxDQUFRQyxLQUE1QyxDQUNILENBM0NNLENBQWYsQ0E4Q0EsR0FBSXNCLFVBQVczQyxHQUFHNEMsTUFBSCxDQUFVdkMsUUFBVixDQUFvQkQsT0FBcEIsQ0FBZixDQUVBSixHQUFHRSxZQUFILEVBQWlCMkMsWUFBakIsQ0FBOEJGLFFBQTlCLEVBQ0tHLElBREwsQ0FDVSxDQUFDRCxhQUFlLEtBQWhCLENBQXVCRSxZQUFjLEtBQXJDLENBRFYsQ0FFSCxDQUVEO0FBQ0E7QUFDQTtBQUNBL0MsR0FBR2dELEVBQUgsQ0FBTS9DLHFCQUFOLENBQThCLFNBQVVFLHFCQUFWLENBQWlDQyxPQUFqQyxDQUEwQyxDQUNwRSxNQUFPLE1BQUs2QyxJQUFMLENBQVUsVUFBVyxDQUN4QixHQUFJaEQsc0JBQUosQ0FBMEIsSUFBMUIsQ0FBZ0NFLHFCQUFoQyxDQUF1REMsT0FBdkQsQ0FDSCxDQUZNLENBR1YsQ0FDSixDQTlEQyxFQThEQThDLE1BOURBLENBQUQiLCJmaWxlIjoibGVnYWN5L3BsdWdpbnMvYWEtYWlycG9ydC1hdXRvLWNvbXBsZXRlLmpzIiwic291cmNlUm9vdCI6Ii9hc3NldHMvanMvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4qICBVSS1SRUZBQ1RPUkVEXG4qICAgIEZST00gLS0+IC4vbGVnYWN5LXdlYi9zcmMvbWFpbi9qcy9hcHBzL2NvbW1vbi9qcy9qcXVlcnkvYWFjb20vcGx1Z2lucy9hYUFpcnBvcnRBdXRvQ29tcGxldGUuanNcbiogICAgVE8gICAtLT4gLi93ZWJhcHBzL3NoYXJlZC13ZWIvc3JjL21haW4vYXNzZXRzL2pzL2xlZ2FjeS9wbHVnaW5zL2FhLWFpcnBvcnQtYXV0by1jb21wbGV0ZS5qc1xuKiovXG5cbi8vUmVxdWlyZXMgalF1ZXJ5IFVJXG47KGZ1bmN0aW9uKCRqKXtcbiAgICBmdW5jdGlvbiBhYUFpcnBvcnRBdXRvQ29tcGxldGUodGFyZ2V0RmllbGRzLCBvbmx5QWlycG9ydHNJZk5vdE51bGwsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGRlZmF1bHRzID0ge1xuICAgICAgICAgICAgICAgIG1pbkxlbmd0aDogMyxcbiAgICAgICAgICAgICAgICBzb3VyY2U6IGZ1bmN0aW9uKHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgICRqLmFqYXgoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJHRVRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCIvaG9tZS9hamF4L2FpcnBvcnRMb29rdXBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VhcmNoVGV4dDogcmVxdWVzdC50ZXJtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9ubHlBaXJwb3J0c0lmTm90TnVsbDogb25seUFpcnBvcnRzSWZOb3ROdWxsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlKCRqLm1hcChkYXRhLCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogaXRlbS5jb2RlICsgXCIgLSBcIiArIGl0ZW0ubmFtZSArIFwiLCBcIiArIChpdGVtLmNvdW50cnlDb2RlID09IFwiVVNcIiA/IGl0ZW0uc3RhdGVDb2RlIDogaXRlbS5jb3VudHJ5TmFtZSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS5jb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1lc3NhZ2VzOiB7XG4gICAgICAgICAgICAgICAgICAgIG5vUmVzdWx0czogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQUFjb20ucHJvdG90eXBlLmdldFByb3BlcnR5KCdhdXRvQ29tcGxldGUubm9SZXN1bHQnKTtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0czogZnVuY3Rpb24oY291bnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXN1bHRNZXNzYWdlID0gXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKGNvdW50ID09PSAxKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRNZXNzYWdlID0gQUFjb20ucHJvdG90eXBlLmdldFByb3BlcnR5KCdhdXRvQ29tcGxldGUub25lUmVzdWx0Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRNZXNzYWdlID0gQUFjb20ucHJvdG90eXBlLmdldFByb3BlcnR5KCdhdXRvQ29tcGxldGUubWFueVJlc3VsdCcpOyAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdE1lc3NhZ2UgPSByZXN1bHRNZXNzYWdlLnJlcGxhY2UoXCJ7MH1cIiwgY291bnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdE1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHNlbGVjdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIC8qIEFuZHJvaWQgdG91Y2ggaXNzdWUgd29ya2Fyb3VuZCB0byBmb3JjZSBzZWxlY3RlZCB2YWx1ZSB0byBkaXNwbGF5IGFuZCBmaXhlcyBSZWJyYW5kIGRlZmVjdCAjMzExICovXG4gICAgICAgICAgICAgICAgICAgICRqKHRoaXMpLmJsdXIoKS5mb2N1cygpOyBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZvY3VzOiBmdW5jdGlvbihldmVudCwgdWkpIHtcbiAgICAgICAgICAgICAgICAgICAgJGooJyNhcmlhTGl2ZVJlYWRlckNvbnRhaW5lcicpLnRleHQodWkuaXRlbS5sYWJlbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcblxuICAgICAgICB2YXIgc2V0dGluZ3MgPSAkai5leHRlbmQoZGVmYXVsdHMsIG9wdGlvbnMpO1xuXG4gICAgICAgICRqKHRhcmdldEZpZWxkcykuYXV0b2NvbXBsZXRlKHNldHRpbmdzKVxuICAgICAgICAgICAgLmF0dHIoe2F1dG9jb21wbGV0ZSA6ICdvZmYnLCBhdXRvY29ycmVjdCA6ICdvZmYnfSk7ICAgICAgICAgICAgXG4gICAgfVxuXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy9SZWdpc3RlciB3aXRoIGpRdWVyeSBhcyBhIHBsdWdpblxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICRqLmZuLmFhQWlycG9ydEF1dG9Db21wbGV0ZSA9IGZ1bmN0aW9uIChvbmx5QWlycG9ydHNJZk5vdE51bGwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIG5ldyBhYUFpcnBvcnRBdXRvQ29tcGxldGUodGhpcywgb25seUFpcnBvcnRzSWZOb3ROdWxsLCBvcHRpb25zKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn0oalF1ZXJ5KSk7XG4iXX0=
//# sourceMappingURL=aa-airport-auto-complete.min.js.map
