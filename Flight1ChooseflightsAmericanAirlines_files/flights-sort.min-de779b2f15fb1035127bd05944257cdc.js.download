'use strict';/**
*  UI-REFACTORED
*    FROM --> ./legacy-web/src/main/js/js/aa/shopping/flightsSort.js
*    TO   --> ./legacy-web/src/main/assets/js/shopping/flights-sort.js
**/AAcom.modules.searchResultsSortFlights=function(AAUI){var resultsRelevanceList=$j('[id^=searchResultsSlice] ul li.js-moreflights').get();var sortconstructor=function sortconstructor(triptime,tripstops,departuretime,arrivaltime,tripprice,index){this.triptime=triptime;this.tripstops=tripstops;this.departuretime=departuretime;this.arrivaltime=arrivaltime;this.tripprice=tripprice;this.index=index};var dynamicSort=function dynamicSort(property){var sortOrder=1;if(property[0]==='-'){sortOrder=-1;property=property.substr(1)}return function(obj1,obj2){var result=obj1[property]>obj2[property]?1:obj1[property]<obj2[property]?-1:0;return result*sortOrder}};var dynamicSortMultiple=function dynamicSortMultiple(){var props=arguments[0];return function(obj1,obj2){var i=0,result=0,numberOfProperties=props.length;while(result===0&&i<numberOfProperties){result=dynamicSort(props[i])(obj1,obj2);i++}$j('.flightsBiasedMessage').hide();return result}};AAUI.sortalgorithm=function(){var sortarr=[],sortcontainer=arguments[0],sortcriteria=arguments[1],resultsRelevanceList=AAUI.resultsRelevanceList,currentsortlistcount=$j(sortcontainer).find('.js-moreflights').not('.is-hidden').length,sortlist=$j(sortcontainer).find('.js-moreflights').removeClass('is-hidden').get();if(arguments.length>2){currentsortlistcount=arguments[2]}$j.each(sortlist,function(index){var triptime=$j(this).data('triptime'),tripstops=$j(this).data('tripstops'),departuretime=$j(this).data('departuretime'),arrivaltime=$j(this).data('arrivaltime'),tripprice=parseInt($j(this).data('tripprice')),index=index,$sortobj;$sortobj=new sortconstructor(triptime,tripstops,departuretime,arrivaltime,tripprice,index);sortarr.push($sortobj)});// '-' in the beginning of a sort criteria in the array below indicates that, that particular column is sorted in the decreasing order.
var sortcriteriajson={stops:['tripstops','departuretime','tripprice','triptime'],price:['tripprice','tripstops','departuretime','triptime'],departearlytolate:['departuretime','tripstops','tripprice','triptime'],departlatetoearly:['-departuretime','tripstops','tripprice','triptime'],arriveearlytolate:['arrivaltime','tripstops','tripprice','departuretime'],arrivelatetoearly:['-arrivaltime','tripstops','tripprice','-departuretime'],time:['triptime','tripstops','tripprice','departuretime']};if(sortcriteria!=='relevance'){sortarr.sort(dynamicSortMultiple(sortcriteriajson[sortcriteria]));$j(sortcontainer).find('.js-forsort').empty();$j.each(sortarr,function(index,value){$j(sortcontainer).find('.js-forsort').append(sortlist[value.index])})}else{$j('.flightsBiasedMessage').show();$j(sortcontainer).find('.js-forsort').empty();$j.each(resultsRelevanceList,function(index,value){$j(sortcontainer).find('.js-forsort').append(resultsRelevanceList[index])})}$j(sortcontainer).find('.js-moreflights').slice(0,currentsortlistcount).removeClass('is-hidden').show();$j(sortcontainer).find('.js-moreflights').slice(currentsortlistcount).addClass('is-hidden').hide();var totalcount=$j(sortcontainer).find('.js-moreflights').length,currentcount=$j(sortcontainer).find('.js-moreflights').not('.is-hidden').length;if(totalcount<=10||currentcount==totalcount)$j(sortcontainer).find('.showingcount').html(AAUI.getProperty('showing')+totalcount+AAUI.getProperty('of')+totalcount);else{$j(sortcontainer).find('.showingcount').html(AAUI.getProperty('showing')+currentcount+AAUI.getProperty('of')+totalcount)}if(totalcount!=currentcount){$j(sortcontainer).find('.showmore').show()}else{$j(sortcontainer).find('.showmore').hide()}if($j.isFunction(AAUI.initTooltips)){AAUI.initTooltips(null)}setTimeout(function(){$j(sortcontainer).find('.js-forsort li').addClass('sorted')},300)}};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=flights-sort.min.js.map
